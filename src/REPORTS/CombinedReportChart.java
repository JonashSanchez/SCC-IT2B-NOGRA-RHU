/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package REPORTS;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.util.*;
import config.dbConnect;
/**
 *
 * @author Hazel Nogra
 */
public class CombinedReportChart extends javax.swing.JFrame {
    Map<String, Integer> appointmentCounts = new LinkedHashMap<>();
    Map<String, Integer> medicineCounts = new LinkedHashMap<>();
    dbConnect connector = new dbConnect();

    public CombinedReportChart() {
        setTitle("RHU Combined Report Chart");
        setSize(1000, 600);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        fetchAppointmentData();
        fetchMedicineData();

        setLayout(new GridLayout(2, 1));

        AppointmentChartPanel appointmentPanel = new AppointmentChartPanel();
        appointmentPanel.setBorder(BorderFactory.createTitledBorder("Most Appointed Services"));

        MedicineChartPanel medicinePanel = new MedicineChartPanel();
        medicinePanel.setBorder(BorderFactory.createTitledBorder("Most Released Medicines"));

        add(appointmentPanel);
        add(medicinePanel);

        setVisible(true);
    }
    
    private void fetchAppointmentData() {
        try {
            String query = "SELECT a_reason, COUNT(*) AS count FROM tbl_appointments GROUP BY a_reason ORDER BY count DESC";
            ResultSet rs = connector.getData(query);
            System.out.println("APPOINTMENT COUNTS:");
            while (rs.next()) {
                String reason = rs.getString("a_reason");
                int count = rs.getInt("count");
                System.out.println(reason + ": " + count);
                appointmentCounts.put(reason, count);
            }
            rs.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Appointment data error: " + e.getMessage());
        }
    }

    private void fetchMedicineData() {
        try {
            String query = "SELECT m.m_name, COUNT(*) AS count FROM tbl_medicine_release r JOIN tbl_medicines m ON r.m_id = m.m_id GROUP BY m.m_name ORDER BY count DESC";
            ResultSet rs = connector.getData(query);
            System.out.println("MEDICINE COUNTS:");
            while (rs.next()) {
                String name = rs.getString("m_name");
                int count = rs.getInt("count");
                System.out.println(name + ": " + count);
                medicineCounts.put(name, count);
            }
            rs.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Medicine data error: " + e.getMessage());
        }
    }

    class AppointmentChartPanel extends JPanel {
        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            drawBarChart(g, appointmentCounts, Color.BLUE);
        }
    }

    class MedicineChartPanel extends JPanel {
        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            drawBarChart(g, medicineCounts, Color.GREEN);
        }
    }

    private void drawBarChart(Graphics g, Map<String, Integer> data, Color color) {
        Graphics2D g2 = (Graphics2D) g;
        int width = getWidth();
        int height = getHeight();

        int padding = 50;
        int labelHeight = 20;
        int chartHeight = height - 2 * padding - 40;

        if (data.isEmpty()) return;

        int barWidth = (width - 2 * padding) / data.size();
        int maxValue = Collections.max(data.values());

        int i = 0;
        for (Map.Entry<String, Integer> entry : data.entrySet()) {
            String label = entry.getKey();
            int value = entry.getValue();

            int barHeight = chartHeight * value / maxValue;
            int x = padding + i * barWidth;
            int y = height - padding - barHeight;

            g2.setColor(color);
            g2.fillRect(x, y, barWidth - 10, barHeight);

            g2.setColor(Color.BLACK);
            g2.drawString(String.valueOf(value), x + 5, y - 5);

            String shortLabel = label.length() > 10 ? label.substring(0, 10) + "..." : label;
            g2.drawString(shortLabel, x + 2, height - padding + labelHeight);

            i++;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        reporttable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        reporttable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        reporttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        reporttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reporttableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(reporttable);

        jPanel7.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, 600, -1));

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setBackground(new java.awt.Color(102, 51, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/minglamain.png"))); // NOI18N
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(-70, -50, 370, 330));

        jPanel7.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 580));

        jLabel1.setFont(new java.awt.Font("Arial", 3, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("REPORTS");
        jPanel7.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, 570, 70));

        jLabel2.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel7.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 10, 120, 60));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 885, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 885, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 580, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reporttableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reporttableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_reporttableMouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked

    }//GEN-LAST:event_jLabel2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        SwingUtilities.invokeLater(CombinedReportChart::new);
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CombinedReportChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CombinedReportChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CombinedReportChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CombinedReportChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CombinedReportChart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable reporttable;
    // End of variables declaration//GEN-END:variables
}
